plugins {
    id 'java-library'
    id 'checkstyle'
    id 'com.github.spotbugs' version '4.7.6'
    id 'maven-publish'
    id 'signing'
    id "io.codearte.nexus-staging" version '0.30.0'
}

group = 'com.imsweb'
version = file('VERSION').text.trim()
description = 'Shared Swing library for the SEER Java projects'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

println "Starting build using JDK ${Runtime.version().feature()}"

repositories {
    mavenCentral()
}

// dependency jars
dependencies {
    testImplementation 'org.apache.commons:commons-lang3:3.12.0'
    testImplementation 'com.opencsv:opencsv:5.5.2'
    testImplementation 'com.imsweb:seerutils:5.6'
    testImplementation 'com.imsweb:layout:4.6'
    testImplementation 'com.imsweb:algorithms:3.7'
}

// enforce UTF-8, display the compilation warnings
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation'
}

// the Javadoc was made way too strict in Java 8 and it's not worth the time fixing everything!
tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
}

// generate javadoc and sources (required by Nexus)
java {
    withJavadocJar()
    withSourcesJar()
}

// customize the manifest
jar {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Implementation-Vendor': 'Information Management Services Inc.',
                'Created-By': System.properties['java.vm.version'] + ' (' + System.properties['java.vm.vendor'] + ')',
                'Built-By': System.getProperty('user.name'),
                'Built-Date': new Date(),
                'Built-JDK': System.getProperty('java.version'),
                'Automatic-Module-Name': 'com.imsweb.seerutilsgui'
        )
    }
}

// checkstyle plugin settings
checkstyle {
    ignoreFailures = true
    configFile = project(':').file('config/checkstyle/checkstyle.xml')
    configProperties = ['suppressionFile': project(':').file('config/checkstyle/suppressions.xml')]
}

// spotbugs plugin settings
spotbugs {
    ignoreFailures = true
    excludeFilter = project(':').file("config/spotbugs/spotbugs-exclude.xml")
}

// configure nexus staging plugin
nexusStaging {
    numberOfRetries = 50
    delayBetweenRetriesInMillis = 5000
}

// needed to deploy to Maven Central
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'seerutils-gui'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'SEER*Utils GUI'
                description = 'Shared Swing library for the SEER Java projects.'
                url = 'https://github.com/imsweb/seerutils-gui'
                inceptionYear = '2018'

                licenses {
                    license {
                        name = 'A modified BSD License (BSD)'
                        url = 'https://github.com/imsweb/seerutils-gui/blob/master/LICENSE'
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        id = 'depryf'
                        name = 'Fabian Depry'
                        email = 'depryf@imsweb.com'
                    }
                }

                scm {
                    url = 'https://github.com/imsweb/seerutils-gui'
                    connection = 'scm:https://github.com/imsweb/seerutils-gui.git'
                    developerConnection = 'scm:git@github.com:imsweb/seerutils-gui.git'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username = project.findProperty('nexusUsername') ?: ''
                password = project.findProperty('nexusPassword') ?: ''
            }
        }
    }
}

// setup JAR signing
signing {
    def signingKey = project.findProperty('signing.armored.key') ?: ''
    def signingPassword = project.findProperty('signing.armored.password') ?: ''

    useInMemoryPgpKeys(signingKey, signingPassword)

    sign publishing.publications.mavenJava
}

// don't try to release a snapshot to a non-snapshot repository, that won't work anyway
if (version.endsWith('-SNAPSHOT'))
    gradle.startParameter.excludedTaskNames += 'closeAndReleaseRepository'

// Gradle wrapper, this allows to build the project without having to install Gradle!
wrapper {
    gradleVersion = '7.2'
    distributionType = Wrapper.DistributionType.ALL
}

